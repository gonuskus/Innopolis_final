{
  "uid" : "5a133e3709fe3c30",
  "name" : "Проверка очистки формы Корзины после совершения покупки",
  "fullName" : "tests.Basket.test_cleaning_basket_after_buying#test_cleaning_basket_after_buying",
  "historyId" : "7c789ac4eb92f71557850da3a9ac00c2",
  "time" : {
    "start" : 1640016609451,
    "stop" : 1640016613685,
    "duration" : 4234
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>> = <pages.basket_form.BasketForm object at 0x7fa827674ac0>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7fa827674ac0> = <fixtures.application.Application object at 0x7fa8276ccc70>.basket_form",
  "statusTrace" : "app = <fixtures.application.Application object at 0x7fa8276ccc70>\n\n    @allure.epic(\"Продуктовый магазин\")\n    @allure.feature(\"Работа с Корзиной\")\n    @allure.title(\"Проверка очистки формы Корзины после совершения покупки\")\n    def test_cleaning_basket_after_buying(app):\n        with allure.step(\"Открыть страницу магазина\"):\n            app.main_page.open_page(\"\")\n        with allure.step(\n            \"Нажать на иконку 'Корзина' и проверить что отобразилась форма Корзины\",\n        ):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что корзина пустая\"):\n            assert app.basket_form.check_shopping_list() == \"Cart is Empty\"\n        with allure.step(\"Проверить, стоимость товаров в корзине - должно быть 0 руб\"):\n            assert app.basket_form.get_total_price() == \"Total price: 0 ₽\"\n        with allure.step(\"Закрыть форму Корзина\"):\n            app.basket_form.close_basket()\n        with allure.step(\"Набрать продуктов в корзину\"):\n            app.main_page.random_click_on_buying_one_product()\n        with allure.step(\"Открыть корзину\"):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что в корзине находятся товары\"):\n>           assert app.basket_form.check_shopping_list() != \"Cart is Empty\"\nE           AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\nE            +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>>()\nE            +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>> = <pages.basket_form.BasketForm object at 0x7fa827674ac0>.check_shopping_list\nE            +      where <pages.basket_form.BasketForm object at 0x7fa827674ac0> = <fixtures.application.Application object at 0x7fa8276ccc70>.basket_form\n\ntests/Basket/test_cleaning_basket_after_buying.py:27: AssertionError",
  "flaky" : true,
  "newFailed" : true,
  "beforeStages" : [ {
    "name" : "app",
    "time" : {
      "start" : 1640016604950,
      "stop" : 1640016606662,
      "duration" : 1712
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "screenshot_after_test",
    "time" : {
      "start" : 1640016609450,
      "stop" : 1640016609450,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "_session_faker",
    "time" : {
      "start" : 1640016604890,
      "stop" : 1640016604950,
      "duration" : 60
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>> = <pages.basket_form.BasketForm object at 0x7fa827674ac0>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7fa827674ac0> = <fixtures.application.Application object at 0x7fa8276ccc70>.basket_form",
    "statusTrace" : "app = <fixtures.application.Application object at 0x7fa8276ccc70>\n\n    @allure.epic(\"Продуктовый магазин\")\n    @allure.feature(\"Работа с Корзиной\")\n    @allure.title(\"Проверка очистки формы Корзины после совершения покупки\")\n    def test_cleaning_basket_after_buying(app):\n        with allure.step(\"Открыть страницу магазина\"):\n            app.main_page.open_page(\"\")\n        with allure.step(\n            \"Нажать на иконку 'Корзина' и проверить что отобразилась форма Корзины\",\n        ):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что корзина пустая\"):\n            assert app.basket_form.check_shopping_list() == \"Cart is Empty\"\n        with allure.step(\"Проверить, стоимость товаров в корзине - должно быть 0 руб\"):\n            assert app.basket_form.get_total_price() == \"Total price: 0 ₽\"\n        with allure.step(\"Закрыть форму Корзина\"):\n            app.basket_form.close_basket()\n        with allure.step(\"Набрать продуктов в корзину\"):\n            app.main_page.random_click_on_buying_one_product()\n        with allure.step(\"Открыть корзину\"):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что в корзине находятся товары\"):\n>           assert app.basket_form.check_shopping_list() != \"Cart is Empty\"\nE           AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\nE            +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>>()\nE            +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>> = <pages.basket_form.BasketForm object at 0x7fa827674ac0>.check_shopping_list\nE            +      where <pages.basket_form.BasketForm object at 0x7fa827674ac0> = <fixtures.application.Application object at 0x7fa8276ccc70>.basket_form\n\ntests/Basket/test_cleaning_basket_after_buying.py:27: AssertionError",
    "steps" : [ {
      "name" : "Открыть страницу магазина",
      "time" : {
        "start" : 1640016609451,
        "stop" : 1640016609486,
        "duration" : 35
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать на иконку 'Корзина' и проверить что отобразилась форма Корзины",
      "time" : {
        "start" : 1640016609486,
        "stop" : 1640016609542,
        "duration" : 56
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, что корзина пустая",
      "time" : {
        "start" : 1640016609542,
        "stop" : 1640016611559,
        "duration" : 2017
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, стоимость товаров в корзине - должно быть 0 руб",
      "time" : {
        "start" : 1640016611560,
        "stop" : 1640016611573,
        "duration" : 13
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Закрыть форму Корзина",
      "time" : {
        "start" : 1640016611573,
        "stop" : 1640016611617,
        "duration" : 44
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Набрать продуктов в корзину",
      "time" : {
        "start" : 1640016611617,
        "stop" : 1640016611626,
        "duration" : 9
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Открыть корзину",
      "time" : {
        "start" : 1640016611626,
        "stop" : 1640016611667,
        "duration" : 41
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, что в корзине находятся товары",
      "time" : {
        "start" : 1640016611667,
        "stop" : 1640016613685,
        "duration" : 2018
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fa827674ac0>> = <pages.basket_form.BasketForm object at 0x7fa827674ac0>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7fa827674ac0> = <fixtures.application.Application object at 0x7fa8276ccc70>.basket_form\n",
      "statusTrace" : "  File \"/home/runner/work/Innopolis_final/Innopolis_final/tests/Basket/test_cleaning_basket_after_buying.py\", line 27, in test_cleaning_basket_after_buying\n    assert app.basket_form.check_shopping_list() != \"Cart is Empty\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "7cb49dbe7a41d116",
      "name" : "log",
      "source" : "7cb49dbe7a41d116.txt",
      "type" : "text/plain",
      "size" : 182
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "app::0",
    "time" : {
      "start" : 1640016628239,
      "stop" : 1640016628294,
      "duration" : 55
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "screenshot_after_test::0",
    "time" : {
      "start" : 1640016613715,
      "stop" : 1640016613809,
      "duration" : 94
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "db3effb87daa5bd9",
      "name" : "screenshot",
      "source" : "db3effb87daa5bd9.png",
      "type" : "image/png",
      "size" : 132052
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : false,
    "hasContent" : true
  } ],
  "labels" : [ {
    "name" : "epic",
    "value" : "Продуктовый магазин"
  }, {
    "name" : "feature",
    "value" : "Работа с Корзиной"
  }, {
    "name" : "parentSuite",
    "value" : "tests.Basket"
  }, {
    "name" : "suite",
    "value" : "test_cleaning_basket_after_buying"
  }, {
    "name" : "host",
    "value" : "fv-az128-141"
  }, {
    "name" : "thread",
    "value" : "3018-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.Basket.test_cleaning_basket_after_buying"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 6,
        "broken" : 7,
        "skipped" : 0,
        "passed" : 17,
        "unknown" : 0,
        "total" : 30
      },
      "items" : [ {
        "uid" : "469464ae340ea12c",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/54//#testresult/469464ae340ea12c",
        "status" : "passed",
        "time" : {
          "start" : 1640014862489,
          "stop" : 1640014870282,
          "duration" : 7793
        }
      }, {
        "uid" : "a7297a72e8ae3251",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/56//#testresult/a7297a72e8ae3251",
        "status" : "passed",
        "time" : {
          "start" : 1640013318095,
          "stop" : 1640013325744,
          "duration" : 7649
        }
      }, {
        "uid" : "16f54aa2c25127e3",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/55//#testresult/16f54aa2c25127e3",
        "status" : "passed",
        "time" : {
          "start" : 1640012910626,
          "stop" : 1640012918211,
          "duration" : 7585
        }
      }, {
        "uid" : "8b04b0dea2707ac2",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/54//#testresult/8b04b0dea2707ac2",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f518a71b6d0>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f518a71b6d0>> = <pages.basket_form.BasketForm object at 0x7f518a71b6d0>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7f518a71b6d0> = <fixtures.application.Application object at 0x7f518a71bac0>.basket_form",
        "time" : {
          "start" : 1640010928462,
          "stop" : 1640010932767,
          "duration" : 4305
        }
      }, {
        "uid" : "c4bb1e14b01a8f31",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/53//#testresult/c4bb1e14b01a8f31",
        "status" : "passed",
        "time" : {
          "start" : 1639984993229,
          "stop" : 1639985000831,
          "duration" : 7602
        }
      }, {
        "uid" : "716ff259697c1190",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/52//#testresult/716ff259697c1190",
        "status" : "passed",
        "time" : {
          "start" : 1639984794139,
          "stop" : 1639984801865,
          "duration" : 7726
        }
      }, {
        "uid" : "92adbc47e9d76366",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/51//#testresult/92adbc47e9d76366",
        "status" : "passed",
        "time" : {
          "start" : 1639984573420,
          "stop" : 1639984581419,
          "duration" : 7999
        }
      }, {
        "uid" : "f990d081053d1053",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/50//#testresult/f990d081053d1053",
        "status" : "passed",
        "time" : {
          "start" : 1639984186984,
          "stop" : 1639984194441,
          "duration" : 7457
        }
      }, {
        "uid" : "516ddf8109657008",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/50//#testresult/516ddf8109657008",
        "status" : "passed",
        "time" : {
          "start" : 1639983026249,
          "stop" : 1639983033793,
          "duration" : 7544
        }
      }, {
        "uid" : "7c12ecf57e69495c",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/48//#testresult/7c12ecf57e69495c",
        "status" : "passed",
        "time" : {
          "start" : 1639982791516,
          "stop" : 1639982799267,
          "duration" : 7751
        }
      }, {
        "uid" : "1f5bb4523ae1dc1a",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/47//#testresult/1f5bb4523ae1dc1a",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fc309e5f100>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7fc309e5f100>> = <pages.basket_form.BasketForm object at 0x7fc309e5f100>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7fc309e5f100> = <fixtures.application.Application object at 0x7fc309df14f0>.basket_form",
        "time" : {
          "start" : 1639982650986,
          "stop" : 1639982655300,
          "duration" : 4314
        }
      }, {
        "uid" : "760236e32056e23d",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/46//#testresult/760236e32056e23d",
        "status" : "passed",
        "time" : {
          "start" : 1639982484442,
          "stop" : 1639982489023,
          "duration" : 4581
        }
      }, {
        "uid" : "c696e1d2c2ea48a5",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/46//#testresult/c696e1d2c2ea48a5",
        "status" : "passed",
        "time" : {
          "start" : 1639982267326,
          "stop" : 1639982271973,
          "duration" : 4647
        }
      }, {
        "uid" : "a08f23fcff010909",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/46//#testresult/a08f23fcff010909",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f51a4206d60>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f51a4206d60>> = <pages.basket_form.BasketForm object at 0x7f51a4206d60>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7f51a4206d60> = <fixtures.application.Application object at 0x7f51a421a9d0>.basket_form",
        "time" : {
          "start" : 1639981834391,
          "stop" : 1639981836712,
          "duration" : 2321
        }
      }, {
        "uid" : "95132a9a047eb3bc",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/45//#testresult/95132a9a047eb3bc",
        "status" : "passed",
        "time" : {
          "start" : 1639981277981,
          "stop" : 1639981282673,
          "duration" : 4692
        }
      }, {
        "uid" : "8dcfe628b9f2f26c",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/44//#testresult/8dcfe628b9f2f26c",
        "status" : "passed",
        "time" : {
          "start" : 1639980935143,
          "stop" : 1639980939932,
          "duration" : 4789
        }
      }, {
        "uid" : "28b5ca40a446c19d",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/44//#testresult/28b5ca40a446c19d",
        "status" : "broken",
        "statusDetails" : "ValueError: empty range for randrange() (1, 0, -1)",
        "time" : {
          "start" : 1639980600479,
          "stop" : 1639980611768,
          "duration" : 11289
        }
      }, {
        "uid" : "786a4825472db0c4",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/43//#testresult/786a4825472db0c4",
        "status" : "passed",
        "time" : {
          "start" : 1639978166987,
          "stop" : 1639978171892,
          "duration" : 4905
        }
      }, {
        "uid" : "e799cf22842aed71",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/42//#testresult/e799cf22842aed71",
        "status" : "failed",
        "statusDetails" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f6e6e548850>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f6e6e548850>> = <pages.basket_form.BasketForm object at 0x7f6e6e548850>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7f6e6e548850> = <fixtures.application.Application object at 0x7f6e6e548700>.basket_form",
        "time" : {
          "start" : 1639977954366,
          "stop" : 1639977956615,
          "duration" : 2249
        }
      }, {
        "uid" : "ab403f1cfabf4bd4",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/41//#testresult/ab403f1cfabf4bd4",
        "status" : "passed",
        "time" : {
          "start" : 1639977917724,
          "stop" : 1639977922483,
          "duration" : 4759
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "5a133e3709fe3c30.json",
  "parameterValues" : [ ]
}