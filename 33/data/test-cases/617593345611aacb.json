{
  "uid" : "617593345611aacb",
  "name" : "Проверка очистки формы Корзины после совершения покупки",
  "fullName" : "tests.Basket.test_cleaning_basket_after_buying#test_cleaning_basket_after_buying",
  "historyId" : "7c789ac4eb92f71557850da3a9ac00c2",
  "time" : {
    "start" : 1639933177228,
    "stop" : 1639933179475,
    "duration" : 2247
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>> = <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7f4d42c6cb20> = <fixtures.application.Application object at 0x7f4d42cb8100>.basket_form",
  "statusTrace" : "app = <fixtures.application.Application object at 0x7f4d42cb8100>\n\n    @allure.epic(\"Продуктовый магазин\")\n    @allure.feature(\"Работа с Корзиной\")\n    @allure.title(\"Проверка очистки формы Корзины после совершения покупки\")\n    def test_cleaning_basket_after_buying(app):\n        with allure.step(\"Открыть страницу магазина\"):\n            app.main_page.open_page(\"\")\n        with allure.step(\n            \"Нажать на иконку 'Корзина' и проверить что отобразилась форма Корзины\",\n        ):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что корзина пустая\"):\n            # assert app.basket_form.check_shopping_list() == \"Cart is Empty\"\n            assert app.basket_form.check_shopping_list() == \"Cart is Empty\"\n        with allure.step(\"Проверить, стоимость товаров в корзине - должно быть 0 руб\"):\n            assert app.basket_form.get_total_price() == \"Total price: 0 ₽\"\n        with allure.step(\"Закрыть форму Корзина\"):\n            app.basket_form.close_basket()\n        with allure.step(\"Набрать продуктов в корзину\"):\n            app.main_page.random_click_on_buying_one_product()\n        with allure.step(\"Открыть корзину\"):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что в корзине находятся товары\"):\n>           assert app.basket_form.check_shopping_list() != \"Cart is Empty\"\nE           AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\nE            +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>>()\nE            +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>> = <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>.check_shopping_list\nE            +      where <pages.basket_form.BasketForm object at 0x7f4d42c6cb20> = <fixtures.application.Application object at 0x7f4d42cb8100>.basket_form\n\ntests/Basket/test_cleaning_basket_after_buying.py:28: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1639933174940,
      "stop" : 1639933174966,
      "duration" : 26
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  }, {
    "name" : "app",
    "time" : {
      "start" : 1639933174966,
      "stop" : 1639933175809,
      "duration" : 843
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>> = <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7f4d42c6cb20> = <fixtures.application.Application object at 0x7f4d42cb8100>.basket_form",
    "statusTrace" : "app = <fixtures.application.Application object at 0x7f4d42cb8100>\n\n    @allure.epic(\"Продуктовый магазин\")\n    @allure.feature(\"Работа с Корзиной\")\n    @allure.title(\"Проверка очистки формы Корзины после совершения покупки\")\n    def test_cleaning_basket_after_buying(app):\n        with allure.step(\"Открыть страницу магазина\"):\n            app.main_page.open_page(\"\")\n        with allure.step(\n            \"Нажать на иконку 'Корзина' и проверить что отобразилась форма Корзины\",\n        ):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что корзина пустая\"):\n            # assert app.basket_form.check_shopping_list() == \"Cart is Empty\"\n            assert app.basket_form.check_shopping_list() == \"Cart is Empty\"\n        with allure.step(\"Проверить, стоимость товаров в корзине - должно быть 0 руб\"):\n            assert app.basket_form.get_total_price() == \"Total price: 0 ₽\"\n        with allure.step(\"Закрыть форму Корзина\"):\n            app.basket_form.close_basket()\n        with allure.step(\"Набрать продуктов в корзину\"):\n            app.main_page.random_click_on_buying_one_product()\n        with allure.step(\"Открыть корзину\"):\n            app.main_page.click_basket_icon()\n            app.basket_form.basket_form_is_opened()\n        with allure.step(\"Проверить, что в корзине находятся товары\"):\n>           assert app.basket_form.check_shopping_list() != \"Cart is Empty\"\nE           AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\nE            +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>>()\nE            +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>> = <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>.check_shopping_list\nE            +      where <pages.basket_form.BasketForm object at 0x7f4d42c6cb20> = <fixtures.application.Application object at 0x7f4d42cb8100>.basket_form\n\ntests/Basket/test_cleaning_basket_after_buying.py:28: AssertionError",
    "steps" : [ {
      "name" : "Открыть страницу магазина",
      "time" : {
        "start" : 1639933177228,
        "stop" : 1639933177266,
        "duration" : 38
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Нажать на иконку 'Корзина' и проверить что отобразилась форма Корзины",
      "time" : {
        "start" : 1639933177266,
        "stop" : 1639933177325,
        "duration" : 59
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, что корзина пустая",
      "time" : {
        "start" : 1639933177325,
        "stop" : 1639933178344,
        "duration" : 1019
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, стоимость товаров в корзине - должно быть 0 руб",
      "time" : {
        "start" : 1639933178344,
        "stop" : 1639933178358,
        "duration" : 14
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Закрыть форму Корзина",
      "time" : {
        "start" : 1639933178359,
        "stop" : 1639933178404,
        "duration" : 45
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Набрать продуктов в корзину",
      "time" : {
        "start" : 1639933178404,
        "stop" : 1639933178413,
        "duration" : 9
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Открыть корзину",
      "time" : {
        "start" : 1639933178413,
        "stop" : 1639933178456,
        "duration" : 43
      },
      "status" : "passed",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : false,
      "hasContent" : false
    }, {
      "name" : "Проверить, что в корзине находятся товары",
      "time" : {
        "start" : 1639933178456,
        "stop" : 1639933179474,
        "duration" : 1018
      },
      "status" : "failed",
      "statusMessage" : "AssertionError: assert 'Cart is Empty' != 'Cart is Empty'\n +  where 'Cart is Empty' = <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>>()\n +    where <bound method BasketForm.check_shopping_list of <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>> = <pages.basket_form.BasketForm object at 0x7f4d42c6cb20>.check_shopping_list\n +      where <pages.basket_form.BasketForm object at 0x7f4d42c6cb20> = <fixtures.application.Application object at 0x7f4d42cb8100>.basket_form\n",
      "statusTrace" : "  File \"/home/runner/work/Innopolis_final/Innopolis_final/tests/Basket/test_cleaning_basket_after_buying.py\", line 28, in test_cleaning_basket_after_buying\n    assert app.basket_form.check_shopping_list() != \"Cart is Empty\"\n",
      "steps" : [ ],
      "attachments" : [ ],
      "parameters" : [ ],
      "stepsCount" : 0,
      "attachmentsCount" : 0,
      "shouldDisplayMessage" : true,
      "hasContent" : true
    } ],
    "attachments" : [ {
      "uid" : "9cfd5284d9e4b9d5",
      "name" : "log",
      "source" : "9cfd5284d9e4b9d5.txt",
      "type" : "text/plain",
      "size" : 83
    } ],
    "parameters" : [ ],
    "stepsCount" : 8,
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true
  },
  "afterStages" : [ {
    "name" : "app::0",
    "time" : {
      "start" : 1639933189474,
      "stop" : 1639933189530,
      "duration" : 56
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false
  } ],
  "labels" : [ {
    "name" : "feature",
    "value" : "Работа с Корзиной"
  }, {
    "name" : "epic",
    "value" : "Продуктовый магазин"
  }, {
    "name" : "parentSuite",
    "value" : "tests.Basket"
  }, {
    "name" : "suite",
    "value" : "test_cleaning_basket_after_buying"
  }, {
    "name" : "host",
    "value" : "fv-az127-10"
  }, {
    "name" : "thread",
    "value" : "2827-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "tests.Basket.test_cleaning_basket_after_buying"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : false,
  "retry" : false,
  "extra" : {
    "severity" : "normal",
    "retries" : [ ],
    "categories" : [ {
      "name" : "Product defects",
      "matchedStatuses" : [ ],
      "flaky" : false
    } ],
    "history" : {
      "statistic" : {
        "failed" : 1,
        "broken" : 1,
        "skipped" : 0,
        "passed" : 0,
        "unknown" : 0,
        "total" : 2
      },
      "items" : [ {
        "uid" : "17a3dc25b9728a1b",
        "reportUrl" : "https://gonuskus.github.io/Innopolis_final/32//#testresult/17a3dc25b9728a1b",
        "status" : "broken",
        "statusDetails" : "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <button class=\"btn red btn-small\">...</button> is not clickable at point (112, 371). Other element would receive the click: <div id=\"toast-container\">...</div>\n  (Session info: headless chrome=96.0.4664.110)\nStacktrace:\n#0 0x55b12c790ee3 <unknown>\n#1 0x55b12c25e608 <unknown>\n#2 0x55b12c29c044 <unknown>\n#3 0x55b12c299af4 <unknown>\n#4 0x55b12c2972da <unknown>\n#5 0x55b12c295ce2 <unknown>\n#6 0x55b12c2897b8 <unknown>\n#7 0x55b12c2b2272 <unknown>\n#8 0x55b12c289063 <unknown>\n#9 0x55b12c2b237e <unknown>\n#10 0x55b12c2c53bc <unknown>\n#11 0x55b12c2b2163 <unknown>\n#12 0x55b12c287bfc <unknown>\n#13 0x55b12c288c05 <unknown>\n#14 0x55b12c7c2baa <unknown>\n#15 0x55b12c7d8651 <unknown>\n#16 0x55b12c7c3b05 <unknown>\n#17 0x55b12c7d9a68 <unknown>\n#18 0x55b12c7b805f <unknown>\n#19 0x55b12c7f4818 <unknown>\n#20 0x55b12c7f4998 <unknown>\n#21 0x55b12c80feed <unknown>\n#22 0x7f647ac3c609 <unknown>",
        "time" : {
          "start" : 1639904755321,
          "stop" : 1639904758961,
          "duration" : 3640
        }
      } ]
    },
    "tags" : [ ]
  },
  "source" : "617593345611aacb.json",
  "parameterValues" : [ ]
}